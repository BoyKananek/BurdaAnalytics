<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <!-- <link rel="icon" type="image/png" href="assets/img/favicon.ico"> -->
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

  <title>HELLO Magazine Thailand Dashboard</title>
  <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
  <meta name="google-signin-client_id" content="532462454691-svtj54st9puu03q57j8fh34i32e08o99.apps.googleusercontent.com">
  <meta name="google-signin-scope" content="https://www.googleapis.com/auth/analytics.readonly">
    <meta name="viewport" content="width=device-width" />

    <script type="text/javascript" src="https://www.google.com/jsapi"></script> 
    <!-- Bootstrap core CSS     -->
    <link href="/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Animation library for notifications   -->
    <link href="/css/animate.min.css" rel="stylesheet"/>

    <!--  Light Bootstrap Table core CSS    -->
    <link href="/css/light-bootstrap-dashboard.css" rel="stylesheet"/>


    <!--  CSS for Demo Purpose, don't include it in your project     -->
    <link href="/css/demo.css" rel="stylesheet" />

    <!--     Fonts and icons     -->
    <!-- <link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">  -->
     <link href="/css/font-awesome.css" rel="stylesheet" type="text/css"> 


    <!--<link href='http://fonts.googleapis.com/css?family=Roboto:400,700,300' rel='stylesheet' type='text/css'> -->
    <link href="/css/pe-icon-7-stroke.css" rel="stylesheet" />


<!-- Include the CSS that styles the charts. -->
<link rel="stylesheet" href="https://ga-dev-tools.appspot.com/public/css/chartjs-visualizations.css">

</head>

<body>

<div class="wrapper">
    <div class="sidebar" data-color="blue" data-image="/img/sidebar-4.jpg">

    <!--

        Tip 1: you can change the color of the sidebar using: data-color="blue | azure | green | orange | red | purple"
        Tip 2: you can also add an image using data-image tag

    -->

      <div class="sidebar-wrapper">
            <div class="logo">
                <a href="#" class="simple-text">
                    DASHBOARD DIGITAL
                </a>
            </div>

            <ul class="nav">
              <li>
                   <a href="/index-lisa">LISAGURU.COM</a>
              </li>
              <li> 
                   <a href="/index-hello">HELLOMAGAZINETHAILAND.COM</a>
              </li> 
            </ul>
      </div>
    </div>

    <div class="main-panel">
        <nav class="navbar navbar-default navbar-fixed">
            <div class="container-fluid">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navigation-example-2">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                </div>
                <div class="collapse navbar-collapse">
                    <ul class="nav navbar-nav navbar-left">
                        <li>
                           <div class="g-signin2" data-onsuccess="loginSuccess" hidden="true"></div> 
                        </li>
                        
                    </ul>

                    <ul class="nav navbar-nav navbar-right">
                        <li>
                           <!-- <div id="view-name"></div> 
                            <div id="active-users-container"></div>    -->
                        </li>
                        <li>
                           <a href="#" onclick="signOut();">Sign out</a>
                        </li> 
                    </ul>
                </div>
            </div>
        </nav>



<!-- The API response will be printed here. -->
      <div class="panel panel-default">
      <center><h1>Performance of Hello Magazine Thailand</h1>(last 30 days)</center>
        <div class="panel-body">
          <div class="row">
            <div class="col-sm-4"> 
              <center><h2>Sessions</h2><i class="fa fa-users fa-2x" aria-hidden="true"></i></center>
               <center><h4><span id="sessions">0</span></h4>
               <!--Last month vs this month<p id="lastSessions"></p> -->
               </center>
            </div>
            <div class="col-sm-4">
             <center><h2>Users</h2><i class="fa fa-user fa-2x" aria-hidden="true"></i></center>
             <center><h4><span id="users">0</span></h4>
             <!--Last month vs this month<p id="lastUsers"></p> -->
             </center>
            </div>
            <div class="col-sm-4">
              <center><h2>Page Views</h2><i class="fa fa-file-o fa-2x" aria-hidden="true"></i></center>
               <center><h4><span id="pages">0</span></h4>
               <!--Last month vs this month<p id="lastPages"></p> -->
               </center>
            </div>
          </div>
          
          <figure class="Chartjs-figure" id="chart-container"></figure>
          <ol class="Chartjs-legend" id="legend-container"></ol>
          <div class="row">
            <div class="col-sm-6">
                <center><h2> New users vs Return users</h2></center>
                <figure class="Chartjs-figure" id="chart-container2"></figure>
                <ol class="Chartjs-legend" id="legend-container2"></ol>
            </div>
            <div class="col-sm-6">
                <center><h2> Devices </h2></center>
                <figure class="Chartjs-figure" id="chart-container3"></figure>
                <ol class="Chartjs-legend" id="legend-container3"></ol>
            </div>
          </div>
          <div class="row">
            <div class="col-sm-6">
              <center><h2> Average time per Page </h2></center>
               <center><h4 id="avgTimePage"></h4></center>
            </div>
            <div class="col-sm-6">
              <center><h2> Bounce Rate </h2></center>
              <center><h4 id="bounceRate"></h4></center>
            </div>
          </div>

        </div>
      </div>
      <footer class="footer">
                    <div class="container-fluid">
                        <p class="copyright pull-right">
                            &copy; 2016 Digital Team, made with love for a better web
                        </p>
                    </div>
      </footer>
  </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js"</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.14.1/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.14.1/moment.min.js"></script>
<script>
  //change view here
  var viewID = 'ga:126985844'
  var VIEW_ID = '126985844';

  //signOut function
  function signOut() {
      var auth2 = gapi.auth2.getAuthInstance();
      auth2.signOut().then(function () {
        window.location.assign("/");
      });
  }
  // render function 
  function loginSuccess(){
    querySessions();
    queryUsers();
    queryPages();
    renderOverall(viewID);
    renderUserType(viewID);
    renderDevice(viewID);
    queryAvgtimePage();
    querybounceRate();
  }

  // Query the API and print the results to the page.
  function querySessions() {
    gapi.client.request({
      path: '/v4/reports:batchGet',
      root: 'https://analyticsreporting.googleapis.com/',
      method: 'POST',
      body: {
        reportRequests: [
          {
            viewId: VIEW_ID,
            dateRanges: [
              {
                startDate: '30daysAgo',
                endDate: 'today'
              },
              {
                startDate:'60daysAgo',
                endDate:'30daysAgo'
              }
            ],
            metrics: [
              {
                expression: 'ga:sessions'
              }
            ]
          }
        ]
      }
    }).then(displaySessionsResults, console.error.bind(console));
  }
  function displaySessionsResults(response) {
    var formattedJson = JSON.stringify(response.result, null, 2);
    var totalsSessions = response.result.reports[0].data.totals[0].values[0];
    var lasttotalsSessions = response.result.reports[0].data.totals[1].values[0];
    var dif = (totalsSessions - lasttotalsSessions);
    var ans = (100 * dif) / lasttotalsSessions;
    var comma_separator_number_step = $.animateNumber.numberStepFactories.separator(',')
    if( ans >= 0 ){
      //document.getElementById('sessions').innerHTML = totalsSessions;
      $('#sessions').animateNumber({ number: totalsSessions,numberStep: comma_separator_number_step });
      document.getElementById('sessions').innerHTML = '<i class="fa fa-arrow-up" aria-hidden="true" style="color: green;"></i>' +ans.toFixed(2) + "%";
   }else{
      //document.getElementById('sessions').innerHTML = totalsSessions;
      $('#sessions').animateNumber({ number: totalsSessions,numberStep: comma_separator_number_step });
      document.getElementById('sessions').innerHTML = '<i class="fa fa-arrow-down" aria-hidden="true" style="color:red;"></i>' +ans.toFixed(2) + "%";
    }
  }

  function queryUsers() {
    gapi.client.request({
      path: '/v4/reports:batchGet',
      root: 'https://analyticsreporting.googleapis.com/',
      method: 'POST',
      body: {
        reportRequests: [
          {
            viewId: VIEW_ID,
            dateRanges: [
              {
                startDate: '30daysAgo',
                endDate: 'today'
              },
              {
                startDate:'60daysAgo',
                endDate:'30daysAgo'
              }
            ],
            metrics: [
              {
                expression: 'ga:users'
              }
            ]
          }
        ]
      }
    }).then(displayUsersResults, console.error.bind(console));
  }
  function displayUsersResults(response){
    var totalsUsers = response.result.reports[0].data.totals[0].values[0];
    var lasttotalsUsers = response.result.reports[0].data.totals[1].values[0];
    var dif = totalsUsers - lasttotalsUsers;
    var ans = (100*dif) / lasttotalsUsers;
    var comma_separator_number_step = $.animateNumber.numberStepFactories.separator(',')
    if( ans >= 0 ){
       $('#users').animateNumber({ number: totalsUsers,numberStep: comma_separator_number_step });
      //document.getElementById('users').innerHTML = totalsUsers;
      document.getElementById('users').innerHTML = '<i class="fa fa-arrow-up" aria-hidden="true" style="color: green;"></i>' +ans.toFixed(2) + "%";
   }else{
      //document.getElementById('users').innerHTML = totalsUsers;
      $('#users').animateNumber({ number: totalsUsers,numberStep: comma_separator_number_step });
      document.getElementById('users').innerHTML = '<i class="fa fa-arrow-down" aria-hidden="true" style="color: red;"></i>' +ans.toFixed(2) + "%";
    }
  }
  function queryPages() {
    gapi.client.request({
      path: '/v4/reports:batchGet',
      root: 'https://analyticsreporting.googleapis.com/',
      method: 'POST',
      body: {
        reportRequests: [
          {
            viewId: VIEW_ID,
            dateRanges: [
              {
                startDate: '30daysAgo',
                endDate: 'today'
              },
              {
                startDate:'60daysAgo',
                endDate:'30daysAgo'
              }
            ],
            metrics: [
              {
                expression: 'ga:pageviews'
              }
            ]
          }
        ]
      }
    }).then(displayPagesResults, console.error.bind(console));
  }
  function displayPagesResults(response){
    
    var totalsPages = response.result.reports[0].data.totals[0].values[0];
    var lasttotalsPages = response.result.reports[0].data.totals[1].values[0];
    var dif = totalsPages - lasttotalsPages;
    var ans = (100*dif) / lasttotalsPages;
    var comma_separator_number_step = $.animateNumber.numberStepFactories.separator(',')
    if( ans >= 0 ){
      //document.getElementById('pages').innerHTML = totalsPages;
      $('#pages').animateNumber({ number: totalsPages,numberStep: comma_separator_number_step });
      document.getElementById('pages').innerHTML = '<i class="fa fa-arrow-up" aria-hidden="true" style="color: green;"></i>' +ans.toFixed(2) + "%";
   }else{
      //document.getElementById('pages').innerHTML = totalsPages;
      $('#pages').animateNumber({ number: totalsPages,numberStep: comma_separator_number_step});
      document.getElementById('pages').innerHTML = '<i class="fa fa-arrow-down" aria-hidden="true" style="color: red;"></i>' +ans.toFixed(2) + "%";
    }

    //document.getElementById('pages').innerHTML = totalsPages;
  }
  
  function renderOverall(ids){
    gapi.client.request({
      path: '/v4/reports:batchGet',
      root: 'https://analyticsreporting.googleapis.com/',
      method: 'POST',
      body: {
        reportRequests: [
          {
            viewId: VIEW_ID,
            dateRanges: [
              {
                startDate: '30daysAgo',
                endDate: 'today'
              },
            ],
            metrics: [
              {
                expression: 'ga:sessions'
              },
              {
                expression: 'ga:users'
              },
              {
                expression: 'ga:pageviews'
              }
            ],
            dimensions: [
              {
                name: 'ga:date'
              }
            ]
          }
        ]
      }
    })
    .then(function(response) {
      var dataSession = [];
      var dataUsers = [];
      var dataPageViews = [];
      var labels = [];
      for(var i=0; i < response.result.reports[0].data.rows.length; i ++){
        labels.push(response.result.reports[0].data.rows[i].dimensions[0]);
        dataSession.push(response.result.reports[0].data.rows[i].metrics[0].values[0]);
        dataUsers.push(response.result.reports[0].data.rows[i].metrics[0].values[1]);
        dataPageViews.push(response.result.reports[0].data.rows[i].metrics[0].values[2]);
      }
      
      labels = labels.map(function(label) {
        //return moment(label, 'YYYYMMDD').format('ddd');
        return moment(label,'YYYYMMDD').format('MMM Do YY');
      });
      var data = {
        labels : labels,
        datasets : [
          {
            label: 'Sessions',
            fillColor : 'rgba(151,187,205,0.5)',
            strokeColor : 'rgba(151,187,205,1)',
            pointColor : 'rgba(151,187,205,1)',
            pointStrokeColor : '#fff',
            data : dataSession
          },
          {
            label: 'Users',
            fillColor : 'rgba(40,186,244,0.5)',
            strokeColor : 'rgba(40,186,244,1)',
            pointColor : 'rgba(40,186,244,1)',
            pointStrokeColor : '#fff',
            data : dataUsers
          },
          {
            label: 'Pageviews',
            fillColor : 'rgba(220,220,220,0.5)',
            strokeColor : 'rgba(220,220,220,1)',
            pointColor : 'rgba(220,220,220,1)',
            pointStrokeColor : '#fff',
            data : dataPageViews
          }
        ]
      }
      new Chart(makeCanvas('chart-container')).Line(data);
      generateLegend('legend-container', data.datasets);
    }); 
  }
  function renderUserType(ids){
    gapi.client.request({
      path: '/v4/reports:batchGet',
      root: 'https://analyticsreporting.googleapis.com/',
      method: 'POST',
      body: {
        reportRequests: [
          {
            viewId: VIEW_ID,
            dateRanges: [
              {
                startDate: '30daysAgo',
                endDate: 'today'
              },
            ],
            metrics: [
              {
                expression: 'ga:sessions'
              },
            ],
            dimensions: [
              {
                name: 'ga:userType'
              }
            ]
          }
        ]
      }
    }).then(function(response) {
      var data = [];
      var colors = ['#4D5360','#949FB1','#D4CCC5','#E2EAE9','#F7464A'];
      
      var totalUsers = 0;
      for(var i=0; i < response.result.reports[0].data.rows.length; i ++){
        totalUsers += parseInt(response.result.reports[0].data.rows[i].metrics[0].values[0]);
      }
     
      for(var i=0; i < response.result.reports[0].data.rows.length; i ++){
        data.push({ 
          value: ((parseInt(response.result.reports[0].data.rows[i].metrics[0].values[0])/totalUsers) * 100).toFixed(2),
          color: colors[i], 
          label: response.result.reports[0].data.rows[i].dimensions[0] 
       });
      }

      new Chart(makeCanvas('chart-container2')).Doughnut(data);
      generateLegend('legend-container2', data);
    });
  }
  function renderDevice(ids){
    //render device 
    gapi.client.request({
      path: '/v4/reports:batchGet',
      root: 'https://analyticsreporting.googleapis.com/',
      method: 'POST',
      body: {
        reportRequests: [
          {
            viewId: VIEW_ID,
            pageSize: 5,
            dateRanges: [
              {
                startDate: '30daysAgo',
                endDate: 'today'
              },
            ],
            metrics: [
              {
                expression: 'ga:sessions'
              },
            ],
            dimensions: [
              {
                name: 'ga:deviceCategory'
              }
            ]
          }
        ]
      }
    }).then(function(response) {
      var data = [];
      var colors = ['#4D5360','#949FB1','#D4CCC5','#E2EAE9','#F7464A'];
      
      var totalUsers = 0;
      for(var i=0; i < response.result.reports[0].data.rows.length; i ++){
        totalUsers += parseInt(response.result.reports[0].data.rows[i].metrics[0].values[0]);
      }
     
      for(var i=0; i < response.result.reports[0].data.rows.length; i ++){
        data.push({ 
          value: ((parseInt(response.result.reports[0].data.rows[i].metrics[0].values[0])/totalUsers) * 100).toFixed(2),
          color: colors[i], 
          label: response.result.reports[0].data.rows[i].dimensions[0] 
       });
      }

      new Chart(makeCanvas('chart-container3')).Doughnut(data);
      generateLegend('legend-container3', data);
    });
  }

  function queryAvgtimePage(){
    gapi.client.request({
      path: '/v4/reports:batchGet',
      root: 'https://analyticsreporting.googleapis.com/',
      method: 'POST',
      body: {
        reportRequests: [
          {
            viewId: VIEW_ID,
            dateRanges: [
              {
                startDate: '30daysAgo',
                endDate: 'today'
              }
            ],
            metrics: [
              {
                expression: 'ga:avgSessionDuration'
              }
            ]
          }
        ]
      }
    }).then(displayAvgResults, console.error.bind(console));
  }
  function displayAvgResults(response){
    var avg = response.result.reports[0].data.totals[0].values[0];
    var min = avg/60;
    document.getElementById('avgTimePage').innerHTML = (parseFloat(min).toFixed(2)).toString() + " minutes";
  }

  function querybounceRate(){
    gapi.client.request({
      path: '/v4/reports:batchGet',
      root: 'https://analyticsreporting.googleapis.com/',
      method: 'POST',
      body: {
        reportRequests: [
          {
            viewId: VIEW_ID,
            dateRanges: [
              {
                startDate: '30daysAgo',
                endDate: 'today'
              }
            ],
            metrics: [
              {
                expression: 'ga:bounceRate'
              }
            ]
          }
        ]
      }
    }).then(displaybounceRates, console.error.bind(console));
  }
  function displaybounceRates(response){
    var bounceRate = response.result.reports[0].data.totals[0].values[0];
    document.getElementById('bounceRate').innerHTML = parseFloat((bounceRate)).toFixed(2).toString() + " %";
  }

  /**
   * Create a new canvas inside the specified element. Set it to be the width
   * and height of its container.
   * @param {string} id The id attribute of the element to host the canvas.
   * @return {RenderingContext} The 2D canvas context.
   */
  function makeCanvas(id) {
    var container = document.getElementById(id);
    var canvas = document.createElement('canvas');
    var ctx = canvas.getContext('2d');

    container.innerHTML = '';
    canvas.width = container.offsetWidth;
    canvas.height = container.offsetHeight;
    container.appendChild(canvas);

    return ctx;
  }


  /**
   * Create a visual legend inside the specified element based off of a
   * Chart.js dataset.
   * @param {string} id The id attribute of the element to host the legend.
   * @param {Array.<Object>} items A list of labels and colors for the legend.
   */
  function generateLegend(id, items) {
    var legend = document.getElementById(id);
    legend.innerHTML = items.map(function(item) {
      var color = item.color || item.fillColor;
      var label = item.label;
      return '<li><i style="background:' + color + '"></i>' + label + '</li>';
    }).join('');
  }


  // Set some global Chart.js defaults.
  Chart.defaults.global.animationSteps = 60;
  Chart.defaults.global.animationEasing = 'easeInOutQuart';
  Chart.defaults.global.responsive = true;
  Chart.defaults.global.maintainAspectRatio = false;

</script>

<!-- Load the JavaScript API client and Sign-in library. -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="https://apis.google.com/js/client:platform.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
  <!--   Core JS Files   -->
  <script src="/js/jquery-1.10.2.js" type="text/javascript"></script>
   <script src="/js/bootstrap.min.js" type="text/javascript"></script> 

  <!--  Checkbox, Radio & Switch Plugins -->
  <script src="/js/bootstrap-checkbox-radio-switch.js"></script>

  <!--  Charts Plugin -->
  <script src="/js/chartist.min.js"></script>

    <!--  Notifications Plugin    -->
    <script src="/js/bootstrap-notify.js"></script>

  <!-- Number JQuery lib-->
  <script src="/js/jquery.animateNumber.js"></script>
  <script src="/js/jquery.animateNumber.min.js"></script>

    <!--  Google Maps Plugin    -->
    <!--<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script> -->

    <!-- Light Bootstrap Table Core javascript and methods for Demo purpose -->
  <script src="/js/light-bootstrap-dashboard.js"></script>



 

</html>

</body>
</html>